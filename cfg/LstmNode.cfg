#!/usr/bin/env python
PACKAGE = "hrii_person_tracker"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# lstm_node_array tab group
lstm_node_array = gen.add_group("lstm_node_array", type="collapse")

# dataset is generated in controlled_data.py in generate_orca_trajectory(). The ORCA simulator works with a simulation step of 1/fps = 0.01 seconds, while
# trajectory points are sampled every sampling_rate simulation steps, sampling_rate being equal to fps/2.5 = 40. This means that the time interval between
# consecutive points in a trajectory is 40*0.01 = 0.4 seconds. However, I chose 1 second as loop prediction period to get feed a smooth input to the LSTM.
default_lstm_node_loop_period = 1.0
initial_lstm_node_loop_period = default_lstm_node_loop_period

lstm_node_array.add("lstm_node_loop_period", double_t, 1, "lstm node loop period (secs)", initial_lstm_node_loop_period, 0.4, 2.5)

exit(gen.generate(PACKAGE, "hrii_person_tracker", "LstmNode"))
